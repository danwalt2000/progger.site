<?php
$title = "React.js - отличный выбор";
$description = "Почему React.js – это отличный выбор для производительного веб-приложения";
$underline = 5;
?>
<?php include "./head.php"; ?>

<div class="headingIntro">
    <p>
        <em>Мои статьи о разработке и дизайне</em>
    </p>
    <p>
        <strong id="mainHeroTitle">Статьи</strong>
    </p>


</div>
</div>
</header>

<main id="page">
    <div id="content">
        <div class="page-content">
            <div class="layout">

                <main id="blogPostContainer" class="blogContent">
                    <div id="blogWrap" class="wrap" style="padding: 0px;">

                        <div class="blog-posts clearfix" style="margin-top: 1%;">
                            <article class="postSingle">
                                <header class="entry-header">
                                    <p class="entry-meta">
                                        <span>Опубликовано</span>
                                        <time class="entry-time">08.10.2020 в 10:25</time>


                                    </p>

                                    <h1 class="introBlockHeading largerHeading">Почему React.js – это отличный выбор для производительного веб-приложения</h1>

                                    <div class="blogPostImage">
                                        <div class="aboutPillar">
                                            <div class="paddingMy"></div>
                                        </div>

                                        <div class="wrapAbout">
                                            <a title="Почему React.js – это отличный выбор для
                                        производительного веб-приложения" href='react-js'>
                                                <img alt="Почему React.js – это отличный выбор для производительного веб-приложения"
                                                     src="content/react-js-logo.jpg" style="border-radius:50%">
                                            </a>
                                        </div>
                                        <div class="aboutPillar">
                                            <div class="paddingMy"></div>
                                        </div>
                                    </div>
                                </header>

                                <p class="textParagraphBlog" style='margin-top:30px'>

                                <p class="articleIntro">
                                    Вашему бизнесу нужно быстрое веб-приложение? Если это так, то фреймворк React.js
                                    может многое предложить.</p>
                                <p class="articleIntro"> React.js, также известный как React, представляет собой
                                    библиотеку JavaScript, изначально разработанную для одного из самых сложных
                                    веб-приложений в истории: Facebook. </p>

                                <h2>Как создавался фреймворк</h2>
                                <p>
                                    Первая версия платформы была разработана инженером-программистом Facebook Джорданом
                                    Уолком в 2011 году и вскоре после этого была развернута для управления системой
                                    ленты новостей этого сайта. В следующем году он был размещен в Instagram, а в 2013
                                    году код React.js был опубликован на Гитхабе под лейблом OpenSource (и,
                                    следовательно, стал открытым для общественности). С тех пор он его популярность в
                                    мире только росла.
                                </p>
                                <p>
                                    Со временем было выпущено больше инструментов на основе React, самый известный из
                                    которых - React Native, который позволяет нативную разработку на Android, iOS и
                                    универсальной платформе Windows Microsoft.
                                </p>
                                <p>
                                    Использование React для вашего следующего проекта может дать несколько важных
                                    преимуществ, но не для всех ситуаций. Вот краткое руководство по плюсам и минусам
                                    использования React.js для вашего следующего веб-приложения.
                                </p>
                                <p>
                                    Какие типы проектов лучше всего подходят для React.js?
                                    React.js подходит буквально для любого веб-проекта благодаря надежному API и мощной
                                    модели потока данных.
                                </p>
                                <p>
                                    Если приложению не хватает ресурсов для запуска JavaScript (частью которого является
                                    React.js), по-прежнему есть преимущества от других инструментов в экосистеме React,
                                    таких как Next.js или Gatsby.js, которые все еще можно использовать для создания
                                    статические сайты или сайты, отображаемые на сервере.
                                </p>

                                <img class='img__in__article' height="auto" src="content/react-dev-img.png"/>

                                <h2>Какие проекты подходят для React.js?</h2>
                                <p> Поскольку React.js - это интерфейсный JavaScript-фреймворк, его можно использовать
                                    только для разработки пользовательских интерфейсов для веб-проектов.


                                </p>
                                <p><strong>Четыре основных причины использования React.Js:</strong></p>
                                <ol type="1">
                                    <li><strong>Высокая производительность. </strong>
                                        Создавать высокопроизводительные веб-приложения с помощью React.js просто. В то
                                        время как стандартные веб-приложения используют настоящие объектные модели
                                        документов или DOM (стандартные системные браузеры используют для отображения
                                        веб-страниц), React.js использует виртуальную DOM. Вместо визуализации целых
                                        страниц Virtual DOM выборочно отображает измененные части веб-страницы.
                                        Разработчикам не нужно тратить время на преждевременную оптимизацию - приложения
                                        просто работают. React.js также отлично подходит для разработки веб-сайтов,
                                        «быстрых» для пользователей (что совсем не то же самое, «быстрый» для сервера).
                                        Такие инструменты, как Next.js для рендеринга на стороне сервера, могут
                                        использоваться для сжатия данных, которые затем «воспроизводятся» после загрузки
                                        среды выполнения React.js.
                                    </li>
                                    <li><strong>Повторно используемые компоненты.</strong> Js-приложения состоят из
                                        небольших частей, называемых компонентами. Существует множество
                                        высококачественных компонентов с открытым исходным кодом на выбор, и, конечно
                                        же, разработчики могут создавать свои собственные. Большинство компонентов с
                                        открытым исходным кодом, используемых в React.js, используют популярные решения
                                        CSS-in-JS (инструкции для браузеров презентаций следуют для веб-сайтов). Это
                                        совершенно беспроблемно с точки зрения конфликтов CSS или тематики. В 2019 году
                                        React представил «хуки», которые позволяют разделять поведение или бизнес-логику
                                        между приложениями.
                                    </li>

                                    <li><strong>Реактивный пользовательский интерфейс и односторонний поток
                                            данных.</strong> Экосистема React.js обеспечивает односторонний поток данных
                                        и концепцию модели UI = f (State). Ладно, это немного сложно, но это означает,
                                        что использование React.js автоматически устраняет множество ошибок, связанных с
                                        пользовательскими интерфейсами, делая разработку и отладку приложений React.js
                                        гораздо проще.
                                    </li>

                                    <li>Инструменты разработчика. Одна из сильных сторон React.js - это инструменты: в
                                        дополнение к надежной поверхности API и базе кода, React.js предоставляет лучшие
                                        в своем классе возможности для разработчиков, включая официальные инструменты
                                        разработчика для самого React.js и Redux - самой популярной библиотеки
                                        управления состоянием. Конечно, взаимодействие с пользователем в конечном итоге
                                        более важно, чем опыт разработчика, но когда система проста и эффективна в
                                        использовании, она поможет любому проекту обеспечить более быстрые и
                                        качественные результаты.
                                    </li>
                                </ol>


                                <h2>Есть ли недостатки в использовании React.js?</h2>

                                <p>React.js может многое предложить, но он не идеален. Вот возможные недостатки, на
                                    которые следует обратить внимание:</p>


                                <ol type="1">
                                    <li>Крутая кривая обучения. React.js прост в использовании для новичков, но для его
                                        освоения требуется время. Чтобы стать экспертом, разработчикам необходимы знания
                                        функционального программирования. Разработчикам, привыкшим к
                                        объектно-ориентированному программированию, будет труднее понять компоненты,
                                        замыкания и перехватчики более высокого порядка.
                                    </li>
                                    <li>Стоимость времени выполнения. React.js - это не язык программирования, а лишь
                                        библиотека JavaScript. Да, он позволяет ускорить приложение создавая виртуальную
                                        модель DOM, но для воплощения этой магии ему необходимы другие библиотеки: React
                                        DOM, Redux и т.д. Скачивание библиотек на машину клиента увеличивает время
                                        первой загрузки приложения и переносит значительную часть бизнес-логики на
                                        фронт-энд. Google, как правило, предпочитает сайты, которые требуют меньше
                                        работы для браузеров, поэтому это может оказать значительное влияние на SEO.
                                        Если видимость поисковой системы важна, часть этой работы может быть перенесена
                                        на сервер. Веб-приложениям, которые не зависят от поиска для привлечения
                                        пользователей (конечно, Facebook является лучшим примером), не нужно
                                        беспокоиться об этом.
                                    </li>
                                    <li>Оборотная сторона гибкости. Сила React.js также является его слабостью. Каждый
                                        проект React.js представляет собой уникальную комбинацию React.js, библиотеки
                                        управления состоянием и нескольких меньших библиотек. Это дает разработчикам
                                        большую гибкость в выборе того, что разработчики используют, а что не
                                        используют, но в неопытных руках это может пойти не так (часто приводя к
                                        созданию приложений, которые сложно или невозможно поддерживать).
                                    </li>
                                </ol>

                                <h2>Популярность фреймворков в 2020 году</h2>

                                <p>
                                    Если вы решили изучить новый фронтэнд фреймворк и не знаете, с чего начать, React.js
                                    станет для вас идеальным выбором. По статистике, собранной специалистами портала
                                    Medium, Реакт стал однозначным лидером количеству разработчиков, желающих его изучить.
                                </p>
                                <img class='img__in__article' height="auto" src="content/frameworks-ratio.png"/>
                                <p>А по статистике npm - React.js с большим отрывом от конкурентов лидирует по количеству скачиваний.</p>

<img class='img__in__article' height="auto" src="content/npm-stat-downloads-react.png"/>

                                <p>
                                    С ростом популярности библиотеки, растут и зарплаты разработчиков, что может стать
                                    отличным подспорьем для изучения фреймворка в 2020-м году
                                </p>


                            </article>
                        </div>
                    </div>
            </div>
        </div>
    </div>
    </div>
    </div><!-- конец контейнера блога -->


<?php include "./footer.php"; ?>